// === WhatsApp + OpenAI AI Sales Bot (ESM) ===
// √áalƒ±≈üma Ortamƒ±: Railway / Node 18+
// Gerekli ENV: OPENAI_API_KEY, REDIS_URL
// Opsiyonel ENV: STORE_NAME, BOT_DEFAULT_LANG
// Komutlar: "operator" -> botu sustur, "bot" -> tekrar a√ß

import pkg from 'whatsapp-web.js';
const { Client, RemoteAuth } = pkg;
import qrcode from 'qrcode-terminal';
import 'dotenv/config';
import OpenAI from 'openai';
import express from 'express';
import QRCode from 'qrcode';
import { RedisStore } from 'wwebjs-redis';
import { createClient } from 'redis';

// --- Redis Ayarƒ± ---
const redisClient = createClient({ url: process.env.REDIS_URL });
await redisClient.connect();
const store = new RedisStore({ client: redisClient });

// --- Global ---
let lastQr = null;
const sessions = new Map();
const PORT = process.env.PORT || 3000;

// --- WhatsApp Client ---
const client = new Client({
  authStrategy: new RemoteAuth({
    store: store,
    backupSyncIntervalMs: 300000 // 5dk
  }),
  puppeteer: {
    headless: true,
    executablePath:
      process.env.PUPPETEER_EXECUTABLE_PATH ||
      process.env.CHROME_PATH ||
      '/usr/bin/chromium',
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  }
});

// --- OpenAI ---
const ai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// --- SSS ≈ûablonlarƒ± ---
const faqMap = {
  'fiyat': 'Pre»õurile noastre: 1 pereche 179,90 LEI, 2 perechi 279,90 LEI. Transport gratuit.',
  'iade': 'Ave»õi drept de retur √Æn 14 zile. Produsele trebuie returnate neutilizate.',
  'teslim': 'Livrarea dureazƒÉ 7‚Äì10 zile lucrƒÉtoare.',
  'iban': 'Plata la livrare, nu este necesar transfer bancar.',
};

// --- Session Ba≈ülatma ---
function bootstrap(chatId) {
  if (!sessions.has(chatId)) {
    const storeName = process.env.STORE_NAME || 'Pellvero';
    const systemPrompt = `
E»ôti un asistent de v√¢nzƒÉri pe WhatsApp pentru magazinul online rom√¢nesc "${storeName}".
RƒÉspunde √éNTOTDEAUNA doar √Æn limba rom√¢nƒÉ. Nu adƒÉuga traduceri »ôi nu folosi altƒÉ limbƒÉ.
Scopul tƒÉu este sƒÉ finalizezi comenzi cu platƒÉ la livrare (COD).
DacƒÉ utilizatorul vrea sƒÉ comande, cere pe r√¢nd:
1) Numele complet
2) Adresa completƒÉ (stradƒÉ, numƒÉr, apartament, cod po»ôtal)
3) MƒÉrimea √ÆncƒÉl»õƒÉmintei
4) Culoarea doritƒÉ
NumƒÉrul de telefon NU se solicitƒÉ ‚Äî √Æl ob»õinem automat din WhatsApp.
C√¢nd ai suficiente informa»õii, adaugƒÉ numƒÉrul de telefon ob»õinut automat »ôi trimite un rezumat clar, apoi cere confirmarea cu ‚ÄûDA‚Äù sau ‚ÄûMODIFIC‚Äù.
Livrare: 7‚Äì10 zile lucrƒÉtoare.
Pre»õuri: 1 pereche 179,90 LEI; 2 perechi 279,90 LEI. Transport gratuit, platƒÉ la livrare.
RƒÉspunde scurt (max 5 r√¢nduri), politicos »ôi natural.
`.trim();

    sessions.set(chatId, {
      muted: false,
      history: [{ role: 'system', content: systemPrompt }]
    });
  }
  return sessions.get(chatId);
}

// --- AI Sorgulama ---
async function askAI(chatId, text) {
  const sess = bootstrap(chatId);

  if (sess.history.length > 24) {
    sess.history = [sess.history[0], ...sess.history.slice(-12)];
  }

  sess.history.push({ role: 'user', content: text });

  const res = await ai.chat.completions.create({
    model: 'gpt-4o-mini',
    temperature: 0.3,
    messages: sess.history
  });

  const reply = res.choices?.[0]?.message?.content?.trim() || '';
  sess.history.push({ role: 'assistant', content: reply });
  return reply;
}

// --- WhatsApp Eventleri ---
client.on('qr', (qr) => {
  lastQr = qr;
  qrcode.generate(qr, { small: true });
  console.log('üîë QR hazƒ±r. WhatsApp > Baƒülƒ± Cihazlar > Cihaz Baƒüla ile tara.');
});

client.on('ready', () => {
  console.log('‚úÖ WhatsApp bot hazƒ±r.');
});

client.on('message', async (msg) => {
  try {
    if (msg.fromMe) return;
    const chatId = msg.from;
    const text = (msg.body || '').trim();
    const lower = text.toLowerCase();

    // --- Bot kontrol komutlarƒ± ---
    const sess = bootstrap(chatId);
    if (lower === 'operator') {
      sess.muted = true;
      await msg.reply('VƒÉ conectƒÉm cu un operator. Mul»õumim!');
      return;
    }
    if (lower === 'bot') {
      sess.muted = false;
      await msg.reply('Asistentul a fost reactivat. Cum vƒÉ pot ajuta?');
      return;
    }
    if (sess.muted) return;

    // --- Site sorusu ---
    if (lower.includes('site') || lower.includes('website') || lower.includes('link')) {
      await msg.reply('Site-ul nostru: https://pellvero.com/');
      return;
    }

    // --- SSS cevaplarƒ± ---
    for (const key in faqMap) {
      if (lower.includes(key)) {
        await msg.reply(faqMap[key]);
        return;
      }
    }

    // --- AI cevabƒ± ---
    const phoneFromWp = chatId.split('@')[0]; // WhatsApp'tan tel no
    const injectedText = `${text}\n(NumƒÉr WhatsApp: ${phoneFromWp})`; // AI'ye ek bilgi

    const reply = await askAI(chatId, injectedText);
    if (reply) await msg.reply(reply);
  } catch (err) {
    console.error('‚ùå Hata:', err);
    try {
      await msg.reply('Ne pare rƒÉu, a apƒÉrut o eroare temporarƒÉ. √éncerca»õi din nou.');
    } catch {}
  }
});

// --- Express Keepalive ---
const app = express();

app.get('/qr', async (_req, res) => {
  try {
    if (!lastQr) return res.status(404).send('QR hazƒ±r deƒüil.');
    res.setHeader('Content-Type', 'image/png');
    const png = await QRCode.toBuffer(lastQr, { width: 360, margin: 1 });
    res.end(png);
  } catch (e) {
    res.status(500).send('QR olu≈üturulamadƒ±.');
  }
});

app.get('/', (_req, res) => res.send('WhatsApp AI bot aktiv ‚úÖ'));

app.listen(PORT, () => console.log(`HTTP portu: ${PORT}`));

// --- Bot Ba≈ülat ---
client.initialize();
